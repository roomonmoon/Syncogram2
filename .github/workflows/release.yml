name: Release new version of Application

on:
    push:
        branches: [ "dev" ]

    
env:
    ENV_FILE_PATH: ./Syncogram/sourcefiles/telegram/environments.py
    JSON_CONFIG_PATH: Syncogram/config.json

jobs:

  # build_linux:
  #   name: Build Linux App
  #   runs-on: ubuntu-latest

  #   steps:
  #     # - run: sudo apt --yes update && sudo apt --yes upgrade && sudo apt --yes dist-upgrade
  #   #   - run: sudo apt-get --yes --allow install libpython3.10-dev
  #     - name: Clone GitHub Repository
  #       uses: actions/checkout@v3

  #     - name: Creates Telegram Environments Data
  #       run: |
  #         echo -ne "API_ID=${{ secrets.API_ID }}\n" > ${{ env.ENV_FILE_PATH }};
  #         echo -ne "API_HASH='${{ secrets.API_HASH }}'\n" >> ${{ env.ENV_FILE_PATH }};

  #     - name: JSON to variables
  #       uses: rgarcia-phi/json-to-variables@v1.1.0
  #       with:
  #         filename: ${{ env.JSON_CONFIG_PATH }}
          
  #   #   - name: Install Dependencies
  #       # run: pip install -r requirements.txt
  #   #   - name: Start Build Application
  #   #     run: |
  #   #       flet pack Syncogram/application.py \
  #   #       --product-name "Syncogram Application" \
  #   #       --product-version "${{ env.json_APP_VERSION }}" \
  #   #       --name "Syncogram" \
  #   #       --icon "./Syncogram/assets/psd/telegram.png" \

  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: "Linux"
  #         path: craft/Syncogram


  build_linux:
    name: Build MacOS App
    runs-on: macos-latest

    steps:
      # - run: sudo apt --yes update && sudo apt --yes upgrade && sudo apt --yes dist-upgrade
    #   - run: sudo apt-get --yes --allow install libpython3.10-dev
      - name: Clone GitHub Repository
        uses: actions/checkout@v3

      - name: Creates Telegram Environments Data
        run: |
          echo -ne "API_ID=${{ secrets.API_ID }}\n" > ${{ env.ENV_FILE_PATH }};
          echo -ne "API_HASH='${{ secrets.API_HASH }}'\n" >> ${{ env.ENV_FILE_PATH }};

      - name: JSON to variables
        uses: rgarcia-phi/json-to-variables@v1.1.0
        with:
          filename: ${{ env.JSON_CONFIG_PATH }}
          
    #   - name: Install Dependencies
        # run: pip install -r requirements.txt
    #   - name: Start Build Application
    #     run: |
    #       flet pack Syncogram/application.py \
    #       --product-name "Syncogram Application" \
    #       --product-version "${{ env.json_APP_VERSION }}" \
    #       --name "Syncogram" \
    #       --icon "./Syncogram/assets/psd/telegram.png" \
      - name: Archive Linux Application
        run: |
          tar -czvf Syncogram.app.tar.gz -C craft Syncogram.app


      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "MacOS"
          path: Syncogram.app.tar.gz




  
  release_project:
    name: Release Application
    runs-on: ubuntu-latest
    needs: [build_linux]

    steps:
    - name: Clone GitHub Repo
      uses: actions/checkout@v3

    - name: JSON to variables
      uses: rgarcia-phi/json-to-variables@v1.1.0
      with:
        filename: ${{ env.JSON_CONFIG_PATH }}

    - name: Creates Artifacts dir
      run: mkdir artifacts

    - name: Downloads Artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: ls -R && pwd
      working-directory: artifacts

    - name: Create GitHub release
      id: create-new-release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: "${{ env.json_APP_VERSION }}"
        name: "v${{ env.json_APP_VERSION }}"
        body: "Release Syncogram, ${{ env.json_APP_VERSION }}"
        artifacts: "artifacts/MacOS"